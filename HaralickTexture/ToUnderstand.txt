
Loading....
# extract Haralick texture features in 4 directions, then take the
# mean of each direction
	texture = imagePath[imagePath.rfind("/") + 1:].split("_")[0]
	features = mahotas.features.haralick(image).mean(axis=0)
 
  
# update the data and labels
	data.append(features)
	labels.append(texture)


Creating training model....

print("[INFO] training model...")
	model = LogisticRegression()
	model.fit(data, labels)
print("[INFO] classifying...")


Testing and Classifying basis training.....

for imagePath in glob.glob("/content/Testing"+ "/*.png"):
	# load the image, convert it to grayscale, and extract Haralick
	# texture from the test image
		image = cv2.imread(imagePath)
		gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
		features = mahotas.features.haralick(gray).mean(axis=0)

	# classify the test image
		pred = model.predict(features.reshape(1, -1))[0]
		cv2.putText(image, pred, (20, 30), cv2.FONT_HERSHEY_SIMPLEX, 1.0,
							(0, 255, 0), 3)

	# show the output image
	cv2_imshow(image)



